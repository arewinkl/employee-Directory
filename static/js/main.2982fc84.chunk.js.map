{"version":3,"sources":["components/Card.js","components/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["Employee","props","scope","index","User","name","first","last","email","dob","age","cell","gender","employeeTable","state","original","current","sortDirection","SortChange","setState","handleSearches","term","updatedList","filter","user","toLowerCase","includes","console","log","this","sorted","sort","a","b","className","type","aria-label","placeholder","onChange","event","target","value","onClick","map","Card","id","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","href","rel","document","getElementById"],"mappings":"iSAkBeA,EAhBE,SAAAC,GACb,OACA,+BACA,oBAAIC,MAAM,MAAV,SAAiBD,EAAME,MAAO,IAC9B,oBAAID,MAAM,MAAV,SAAiBD,EAAMG,KAAKC,KAAKC,QACjC,oBAAIJ,MAAM,MAAV,SAAiBD,EAAMG,KAAKC,KAAKE,OACjC,oBAAIL,MAAM,MAAV,SAAiBD,EAAMG,KAAKI,QAC5B,oBAAIN,MAAM,MAAV,SAAiBD,EAAMG,KAAKK,IAAIC,MAChC,oBAAIR,MAAM,MAAV,SAAiBD,EAAMG,KAAKO,OAC5B,oBAAIT,MAAM,MAAV,SAAiBD,EAAMG,KAAKQ,aCJXC,G,kNACnBC,MAAQ,CACNC,SAAU,GACVC,QAAS,GACTC,cAAe,G,EAWnBC,WAAa,WACsB,IAA7B,EAAKJ,MAAMG,cACb,EAAKE,SAAS,CAAEF,eAAgB,IAEhC,EAAKE,SAAS,CAAEF,cAAe,K,EAIjCG,eAAiB,SAAAC,GACf,IAAMC,EAAc,EAAKR,MAAMC,SAASQ,QACtC,SAAAC,GAAI,OAEFA,EAAKnB,KAAKC,MAAMmB,cAAcC,SAASL,EAAKI,gBAC5CD,EAAKnB,KAAKE,KAAKkB,cAAcC,SAASL,EAAKI,kBAE7C,EAAKN,SAAS,CAEVH,QAASM,IAEbK,QAAQC,IAAIN,I,kEA1BdO,KAAKV,SAAS,CACZJ,SAAUS,EACVR,QAASQ,M,+BA2BH,IAAD,OAGDM,EAASD,KAAKf,MAAME,QAAQe,MAAK,SAACC,EAAGC,GAEzC,OAAiC,IAA7B,EAAKnB,MAAMG,cACNe,EAAE3B,KAAKC,MAAQ2B,EAAE5B,KAAKC,MAAQ,GAAK,EAEnC0B,EAAE3B,KAAKC,MAAQ2B,EAAE5B,KAAKC,MAAQ,GAAK,KAI9C,OACE,qCACA,8BACE,oBAAI4B,UAAU,QAAd,SAAsB,4DAGtB,uBACCC,KAAK,OAAOD,UAAU,sBAAsBE,aAAW,QACvDC,YAAY,SACbC,SAAU,SAAAC,GAAK,OAAI,EAAKnB,eAAemB,EAAMC,OAAOC,UAEpD,wBAAOP,UAAU,iCAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,OAAOhC,MAAM,MAA3B,gBAEA,oBAAIgC,UAAU,OAAOhC,MAAM,MAA3B,SAAiC,wBAAQiC,KAAK,SAASO,QAASb,KAAKX,WAApC,0BACjC,oBAAIgB,UAAU,OAAOhC,MAAM,MAA3B,uBACA,oBAAIgC,UAAU,OAAOhC,MAAM,MAA3B,mBAEA,oBAAIgC,UAAU,OAAOhC,MAAM,MAA3B,iBACA,oBAAIgC,UAAU,OAAOhC,MAAM,MAA3B,wBACA,oBAAIgC,UAAU,OAAOhC,MAAM,MAA3B,yBAIJ,gCAEG4B,EAAOa,KAAI,SAACnB,EAAMrB,GAAP,OACV,cAACyC,EAAD,CAAMxC,KAAMoB,EAAMrB,MAAOA,GAAYqB,EAAKqB,GAAGJ,sB,GA9EhBK,cCG5BC,EANH,WACV,OACA,cAAE,EAAF,KCMaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IAEA,sBACAC,KAAK,8EACLC,IAAI,kBAGNC,SAASC,eAAe,SAM1Bf,K","file":"static/js/main.2982fc84.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Employee = props =>{\n    return(\n    <tr>\n    <th scope=\"col\">{props.index +1}</th>  \n    <th scope=\"col\">{props.User.name.first}</th>\n    <th scope=\"col\">{props.User.name.last}</th>\n    <th scope=\"col\">{props.User.email}</th> \n    <th scope=\"col\">{props.User.dob.age}</th> \n    <th scope=\"col\">{props.User.cell}</th>\n    <th scope=\"col\">{props.User.gender}</th>\n    \n    </tr>\n    \n    )\n}\n\nexport default Employee","import React, { Component } from \"react\";\nimport user from \"../library/user.json\";\nimport Card from \"./Card.js\";\nimport \"./style.css\";\n\n//creating a employee table class that extends from the component\n//this component will cover the searches also.\nexport default class employeeTable extends Component {\n  state = {\n    original: [],\n    current: [],\n    sortDirection: 1\n  };\n  //component did mount/ user.\n  componentDidMount() {\n    this.setState({\n      original: user,\n      current: user\n    });\n  }\n\n  \nSortChange = ()=> {\n  if (this.state.sortDirection === 1) {\n    this.setState({ sortDirection: -1 });\n  } else {\n    this.setState({ sortDirection: 1 });\n  }\n}\n    // handling the searches\n  handleSearches = term => {\n    const updatedList = this.state.original.filter(\n      user =>\n      // giving the user.name.first to lowercase to bee seen\n        user.name.first.toLowerCase().includes(term.toLowerCase()) ||\n        user.name.last.toLowerCase().includes(term.toLowerCase())\n       );\n      this.setState({\n        // this.setState will update the list of employees with the search.\n          current: updatedList\n      })\n      console.log(updatedList)\n  };\n  // this is where the rendering begins (be sire to make changes to classNames)\n  render() {\n   \n    \n    const sorted = this.state.current.sort((a, b) => {\n      //sort based off of the criteria above\n      if (this.state.sortDirection === 1) {\n        return a.name.first > b.name.first ? 1 : -1\n      } else {\n        return a.name.first < b.name.first ? 1 : -1\n      }\n    });\n    // this is where the return needs to be developed with HTML preferences.\n    return (\n      <>\n      <div>\n        <h1 className=\"title\"><strong>Employee Directory</strong></h1>\n      </div>\n      \n        <input \n         type=\"text\" className=\"form-control search\" aria-label=\"Large\"\n         placeholder=\"Search\"\n        onChange={event => this.handleSearches(event.target.value)} />\n       {/*input for searches above */}\n        <table className=\"table table-striped table-dark\">\n          <thead>\n            <tr>\n              <th className=\"rows\" scope=\"col\">ID</th>\n              {/* this will handle the button click, attached to FIRST NAME */}\n              <th className=\"rows\" scope=\"col\"><button type=\"button\" onClick={this.SortChange}>FIRST NAME</button></th>\n              <th className=\"rows\" scope=\"col\">LAST NAME</th>\n              <th className=\"rows\" scope=\"col\">EMAIL</th>\n              {/* for any desired column add infor here and match in acompaning js */}\n              <th className=\"rows\" scope=\"col\">AGE</th>\n              <th className=\"rows\" scope=\"col\">CELL PHONE</th>\n              <th className=\"rows\" scope=\"col\">GENDER</th>\n              \n            </tr>\n          </thead>\n          <tbody>\n            {/* generates cards for the users */}\n            {sorted.map((user, index) => (\n              <Card User={user} index={index} key={user.id.value} />\n            ))}\n          </tbody>\n        </table>\n       \n      </>\n    );\n  }\n}","import React from 'react';\nimport './App.css';\nimport EmployeeTable from \"./components/EmployeeTable\"\n\nconst App = () => {\n  return (\n  < EmployeeTable />\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App\n    />\n    <link\n    href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\n    rel=\"stylesheet\"\n  />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}